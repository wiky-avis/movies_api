{
	"info": {
		"_postman_id": "e159204b-b920-4ba3-b16f-93799c23bba1",
		"name": "Movies API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "movies",
			"item": [
				{
					"name": "Список фильмов успешный (пустой поиск)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff466290-6857-4d8e-8a96-4a99652b7124",
								"exec": [
									"pm.test(\"Success\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Number of values\", function() {",
									"    pm.expect(pm.response.json().length).to.be.equal(1, 'Количество записей не равно лимиту');",
									"});",
									"",
									"pm.test(\"Returned item\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"tt0000410\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=1&page=1&sort=id&sort_order=asc&search=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов успешный (убраны все параметры)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed31eb7e-2e4f-4d92-b0a1-01910faa94c9",
								"exec": [
									"pm.test(\"Success\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Removed all params\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.lengthOf(50);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов успешный (поиск по слову camp)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3717124e-53f5-471a-8441-230e88b3be9d",
								"exec": [
									"pm.test(\"Success with word 'camp'\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Returned results\", function() {",
									"    pm.expect(pm.response.json().length).to.be.above(4, 'Недостаточно записей');",
									"    pm.expect(pm.response.json().length).to.be.below(11, 'Записей больше, чем лимит');",
									"});",
									"",
									"pm.test(\"Expected results\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"Star Camp\");",
									"    pm.expect(pm.response.text()).to.include(\"Ich bin ein Star - Holt mich hier raus!\");",
									"    pm.expect(pm.response.text()).to.include(\"Star Struck\");",
									"    pm.expect(pm.response.text()).to.include(\"Smash Mouth: All Star\");",
									"    pm.expect(pm.response.text()).to.include(\"Star Trek VI: The Undiscovered Country\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=20&page=1&sort=id&sort_order=asc&search=camp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "20",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "camp",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов успешный (поиск по N/A)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dbaae9a-e903-4d8a-b086-ba6e87dc65cc",
								"exec": [
									"pm.test(\"Success with words 'N/A'\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Returned results similar to N/A\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(pm.response.text()).to.not.include('N/A');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=N/A",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "N/A",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов отрицательный лимит",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "225acc27-c40c-48f8-8e05-f566341cc5f6",
								"exec": [
									"pm.test(\"Limit is negative\", function() {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=-1&page=1&sort=id&sort_order=asc&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "-1",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов проверка лимита",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd389c2d-0d8a-457a-afb9-e650f8284e0e",
								"exec": [
									"pm.test(\"Success answer\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Returned results\", function() {",
									"    pm.expect(pm.response.json().length).to.be.equal(10, 'Количество записей не равно лимиту');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=10&page=1&sort=id&sort_order=asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. ",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов лимит не число",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcd7c3d2-d860-47a7-b0a1-2dc7c528275e",
								"exec": [
									"pm.test(\"Limit is not a number\", function() {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=aaa&page=1&sort=id&sort_order=asc&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "aaa",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов страница = 0",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0daafbb4-57ed-44b1-ac39-6f7a6f133898",
								"exec": [
									"pm.test(\"Page is not positive\", function() {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=50&page=0&sort=id&sort_order=asc&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "0",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов страница не число",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d2a4b74-f0e9-48de-b187-590b3bda6a2a",
								"exec": [
									"pm.test(\"Page is not a number\", function() {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=50&page=aaaa&sort=id&sort_order=asc&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "aaaa",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов сортировка по несуществующему полю",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99141a1c-aa58-4b4b-bfab-3ebdd2835807",
								"exec": [
									"pm.test(\"Sort field is not permitted\", function() {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=aaa&sort_order=asc&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "aaa",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Список фильмов неправильное название порядка сортировки",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "276ef8d3-0a65-4eb4-b31c-8a8bacf18f0b",
								"exec": [
									"pm.test(\"Sort order does not exist\", function() {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=neutral&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "neutral",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				},
				{
					"name": "Получить фильм успешно",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f33cb1a-282d-47f1-94cc-55297ac07a4e",
								"exec": [
									"pm.test(\"Get movie successfully\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = {",
									"    \"id\": \"tt0112270\",",
									"    \"title\": \"Star Struck\",",
									"    \"description\": \"A boy from the Midwest comes to Hollywood in search of a dream: he wants to be a star. He finds acting teacher Aaron Gillespie who bills himself as \\\"The Buddah of Buddahs\\\" of acting teachers and gets entangled, together with a group of acting students, into the biggest scam in Hollywood: Acting Schools that promise anything to you want to hear. \\\"I will put an Oscar in your hands\\\" are the words of Acting \\\"Guru\\\" Aaron Gillespie: and the story begins.... \\\"Spinal Tap\\\" meets \\\"Fame\\\" is the best way to describe this film.\",",
									"    \"imdb_rating\": 6.4,",
									"    \"writers\": [",
									"        {",
									"            \"id\": \"0b60f2f3ebbbf033f16fa72e56869ad904b20708\",",
									"            \"name\": \"Michael Capellupo\"",
									"        },",
									"        {",
									"            \"id\": \"0b60f2f3eff810257694782480d46a34cfc79342\",",
									"            \"name\": \"Massimo Mazzucco\"",
									"        },",
									"        {",
									"            \"id\": \"0b60f2f3dd9f3b2cf61aa0c52480cf1ed5078db5\",",
									"            \"name\": \"Scott Trost\"",
									"        }",
									"    ],",
									"    \"actors\": [",
									"        {",
									"            \"id\": 2239,",
									"            \"name\": \"Scott Trost\"",
									"        },",
									"        {",
									"            \"id\": 2240,",
									"            \"name\": \"Sean Michael Allen\"",
									"        },",
									"        {",
									"            \"id\": 2241,",
									"            \"name\": \"Scott Caan\"",
									"        },",
									"        {",
									"            \"id\": 2242,",
									"            \"name\": \"Michael Capellupo\"",
									"        }",
									"    ],",
									"    \"genre\": [",
									"        \"Comedy\",",
									"        \"Drama\"",
									"    ],",
									"    \"director\": [",
									"        \"Massimo Mazzucco\"",
									"    ]",
									"};",
									"",
									"pm.test(\"Check correct answer\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.deep.equal(data);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/:movieID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movieID"
							],
							"variable": [
								{
									"key": "movieID",
									"value": "tt0112270",
									"type": "string",
									"description": "(Required) "
								}
							]
						},
						"description": "Получить фильм"
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:movieID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":movieID"
									],
									"variable": [
										{
											"key": "movieID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"title\": \"<string>\",\n \"description\": \"<string>\",\n \"imdb_rating\": \"<float>\",\n \"writers\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"actors\": [\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"genre\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"director\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						},
						{
							"name": "Фильм не найден",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:movieID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":movieID"
									],
									"variable": [
										{
											"key": "movieID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Получить фильм пустой movieID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "726eed04-aa04-44cb-a761-2b14202d1fc3",
								"exec": [
									"pm.test(\"Success\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								""
							]
						},
						"description": "Получить фильм"
					},
					"response": [
						{
							"name": "Фильм не найден",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:movieID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":movieID"
									],
									"variable": [
										{
											"key": "movieID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:movieID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":movieID"
									],
									"variable": [
										{
											"key": "movieID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"title\": \"<string>\",\n \"description\": \"<string>\",\n \"imdb_rating\": \"<float>\",\n \"writers\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"actors\": [\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"genre\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"director\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Получить фильм movieID не существует",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "09c09917-8959-4121-888f-a8504e90863a",
								"exec": [
									"pm.test(\"No movie id\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/:movieID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movieID"
							],
							"variable": [
								{
									"key": "movieID",
									"value": "aaaa",
									"type": "string",
									"description": "(Required) "
								}
							]
						},
						"description": "Получить фильм"
					},
					"response": [
						{
							"name": "Фильм не найден",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:movieID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":movieID"
									],
									"variable": [
										{
											"key": "movieID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies/:movieID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies",
										":movieID"
									],
									"variable": [
										{
											"key": "movieID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"title\": \"<string>\",\n \"description\": \"<string>\",\n \"imdb_rating\": \"<float>\",\n \"writers\": [\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<string>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"actors\": [\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<integer>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"genre\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"director\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Список фильмов поиск по пустой строке Copy",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "limit",
									"value": "50",
									"description": "количество объектов которое надо вывести"
								},
								{
									"key": "page",
									"value": "1",
									"description": "номер страницы"
								},
								{
									"key": "sort",
									"value": "id",
									"description": "свойство по которому нужно отсортировать результат"
								},
								{
									"key": "sort_order",
									"value": "asc",
									"description": "порядок сортировки"
								},
								{
									"key": "search",
									"value": "<string>",
									"description": "неточный поиск по названию, описанию, актерам, сценаристам и режиссерам фильма\nПредставьте, что вы вбили в поиск Яндекса \"Звездные войны\" или \"Джордж Лукас\" или \"Лукас войны\"  вам выводятся соответствующие фильмы. "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/movies?limit=50&page=1&sort=id&sort_order=asc&search=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"movies"
									],
									"query": [
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort",
											"value": "id"
										},
										{
											"key": "sort_order",
											"value": "asc"
										},
										{
											"key": "search",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n },\n {\n  \"id\": \"<string>\",\n  \"title\": \"<string>\",\n  \"imdb_rating\": \"<float>\"\n }\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5ae8d273-4c84-49e9-8aa2-18c5607d61e4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "546a1350-652e-4d89-b8fd-41aa7897c057",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ebc166a5-7b5d-4f7b-a513-15babec9c60d",
			"key": "baseUrl",
			"value": "http://localhost:8000/api"
		}
	],
	"protocolProfileBehavior": {}
}